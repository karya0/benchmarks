1) Optional Configurable params.

     -- Max Number of Threads (NUM_THREADS).
           test unit will start performace test with num threads = 1 upto
           NUM_THREADS in increment of 50.
     -- Max Memory in bytes.(MEM_MAX)
           test unit will start performance test with memory = 2^3 bytes.
           And increment in steps of power of 2 upto max n where 2^n < MEM_MAX
           and 2^(n+1) > MEM_MAX.

2) TestUnit Cases
  Timing TEST
   -- Nice Threads
      Each thread is responsible. Performs allocation and calls free before exit.
     1) Create Posix Threads.
     2) Every thread does following job:
           -- Perform allocation (malloc() calls)
              in loop of 1, 10, 1000 until MAX-LOOP-LIMIT. free() won't be called
              here.
           -- Output time differences into file that can later be used to analyze
              and plot graph.
           -- Call cleanup() that frees up memory claimed during test before exit.

   -- Bad Threads
     1) Same testing behavior as Nice threads but doesn't call free.
          -- Seperate file for its collected time data.

  Memory TEST
   -- malloc() uses internal data structures to maintain block info/ free list etc.
      Memory Test Unit checks overhead for different sizes and amound of allocations.
   -- Run in loop for allocation of size 2^3 to 2^n. Calculate the actual memory
      of used to toal memory allocated.
       -- TODO: Need to analyze and figure out a way to do this.


3) Analysis
    1) For every num-thread, allocation loop plot a data for
           - Memory request size v/s time taken.

    2) Check trend and search reasoning for strange behavior if any.
